# Run unit tests then proccess roles table from s3

name: proccess roles table from s3

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v2
        with:
            path: "requirements.txt"

      - name: Test writing a table to AWS
        working-directory: ./src
        run: |
              python roles_proccess.py --run-type="write_data_test"
              
        env:
          aws_access: ${{ secrets.aws_access }}
          aws_key: ${{ secrets.aws_key }}
          
      - name: Test reading a table to AWS
        working-directory: ./src
        run: |
              python roles_proccess.py --run-type="load_data_test"
              
        env:
          aws_access: ${{ secrets.aws_access }}
          aws_key: ${{ secrets.aws_key }}
          
      - name: Proccess/push roles table
        working-directory: ./src
        run: |
              python roles_proccess.py --run-type="proccess"
              
        env:
          aws_access: ${{ secrets.aws_access }}
          aws_key: ${{ secrets.aws_key }}
